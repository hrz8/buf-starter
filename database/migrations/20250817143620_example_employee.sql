-- +goose Up
-- +goose StatementBegin
CREATE TABLE IF NOT EXISTS altalune_example_employees (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY,
  public_id VARCHAR(20) NOT NULL,
  project_id BIGINT NOT NULL,
  name VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  role VARCHAR(100) NOT NULL,
  department VARCHAR(100) NOT NULL,
  status VARCHAR(10) NOT NULL DEFAULT 'active' CHECK (status IN ('active', 'inactive')),
  created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  -- Composite primary key including partition key
  PRIMARY KEY (project_id, id),
  CONSTRAINT fk_altalune_example_employees_project_id
    FOREIGN KEY (project_id) REFERENCES altalune_projects (id)
    ON DELETE CASCADE ON UPDATE CASCADE
) PARTITION BY LIST (project_id);

-- Add unique indexes that include the partition key (project_id)
-- This ensures public_id is unique within each project
CREATE UNIQUE INDEX IF NOT EXISTS ux_altalune_example_employees_public_id 
  ON altalune_example_employees (project_id, public_id);

-- This ensures email is unique within each project
-- If you need global email uniqueness, you'd need to remove partitioning
CREATE UNIQUE INDEX IF NOT EXISTS ux_altalune_example_employees_email 
  ON altalune_example_employees (project_id, email);

-- Add regular index for common queries
CREATE INDEX IF NOT EXISTS ix_altalune_example_employees_status 
  ON altalune_example_employees (project_id, status);
-- +goose StatementEnd

-- +goose Down
-- +goose StatementBegin
DROP TABLE IF EXISTS altalune_example_employees CASCADE;
-- +goose StatementEnd
